{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\notifications.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Divider } from 'react-native-elements';\nimport NotComp from \"../components/notificationComp\";\nimport styles from \"../Global/calcstyle\";\nimport Styles from \"../style\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Searchnav from \"../navigators/searchnav\";\nimport msgnav from \"../navigators/msgnav\";\nimport Message from \"../components/message\";\nexport default function notifications(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setnumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      settext = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderItem = _useState6[0],\n      setOrderItem = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userid = _useState8[0],\n      setuserid = _useState8[1];\n\n  var readuserid = function readuserid() {\n    return _regeneratorRuntime.async(function readuserid$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userid').then(function (value) {\n              setuserid(eval(value));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var show = function show() {\n    navigation.navigate('Messages', {\n      id: userid\n    });\n  };\n\n  var readData = function readData() {\n    fetch('http://192.168.1.113/project/getorder.php', {\n      method: 'post',\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userid: userid\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJason) {\n      if (responseJason === 'No Notification') settext(responseJason);else {\n        setOrderItem(responseJason.results);\n        settext(' ');\n        setnumber(orderItem.length);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    readuserid();\n    readData();\n  });\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: st.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.Titles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  }, \"Notifications\"), React.createElement(View, {\n    style: st.round,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: {\n      margin: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 39\n    }\n  }, number))), React.createElement(Button, {\n    title: \"View message\",\n    color: \"#dc143c\",\n    onPress: function onPress() {\n      return show();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Divider, {\n    style: {\n      backgroundColor: '#dc143c',\n      marginLeft: 10,\n      marginRight: 10,\n      marginBottom: 10,\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: '#dc143c',\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, text), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: orderItem,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(NotComp, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }))));\n}\nvar st = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    marginTop: 25,\n    padding: 10\n  },\n  purchases: {\n    marginTop: 5,\n    marginBottom: 150\n  },\n  round: {\n    height: 26,\n    width: 26,\n    borderRadius: 13,\n    backgroundColor: 'red',\n    margin: 9\n  }\n});","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/notifications.js"],"names":["React","useState","useEffect","Divider","NotComp","styles","Styles","AsyncStorage","Searchnav","msgnav","Message","notifications","navigation","number","setnumber","text","settext","orderItem","setOrderItem","userid","setuserid","readuserid","getItem","then","value","eval","show","navigate","id","readData","fetch","method","header","body","JSON","stringify","response","json","responseJason","results","length","catch","error","console","st","container","flexDirection","justifyContent","Titles","round","margin","backgroundColor","marginLeft","marginRight","marginBottom","marginTop","fontSize","color","item","StyleSheet","create","padding","purchases","height","width","borderRadius"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { StyleSheet, Text, View ,TextInput,FlatList,ScrollView,TouchableOpacity,Button} from 'react-native';\r\nimport {  Divider } from 'react-native-elements';\r\nimport NotComp from '../components/notificationComp';\r\nimport styles from '../Global/calcstyle';\r\nimport Styles from '../style';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Searchnav from '../navigators/searchnav';\r\nimport msgnav from '../navigators/msgnav'\r\nimport Message from '../components/message';\r\nexport default function notifications ({navigation}) {\r\n\r\nconst [number,setnumber]=useState(0);\r\nconst [text,settext]=useState('');\r\nconst [orderItem,setOrderItem]=useState([])\r\nconst[userid,setuserid]=useState(0);\r\nconst readuserid=async()=>{\r\n   await AsyncStorage.getItem('userid').then((value) => {setuserid(eval(value)); });\r\n \r\n  } \r\n  const show =()=>{\r\n    navigation.navigate('Messages',{id:userid});\r\n}\r\n    const readData =  () => {\r\n      fetch('http://192.168.1.113/project/getorder.php',{\r\n        method:'post',\r\n        header:{\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({     \r\n        userid:userid\r\n        })\r\n      }) \r\n      .then((response)=> response.json())\r\n      .then((responseJason)=>{\r\n        if(responseJason === 'No Notification')settext(responseJason);\r\n        else {setOrderItem(responseJason.results); \r\n        settext(' ');\r\n      setnumber(orderItem.length)}\r\n         }).catch((error)=>{\r\n         console.error(error);\r\n        })\r\n      }\r\n  useEffect(() => {\r\n    readuserid()\r\n   readData()\r\n  })\r\n    return (\r\n        <ScrollView >\r\n            <View style={st.container}>\r\n            <View style={{flexDirection:'row',justifyContent:'center'}}>\r\n               <Text style={Styles.Titles} >Notifications</Text>\r\n               <View style={st.round}><Text style={{margin:6}}>{number}</Text></View>\r\n            </View>\r\n            <Button  title='View message' color='#dc143c' onPress={()=>show()}  /> \r\n            \r\n            <Divider style={{backgroundColor:'#dc143c',marginLeft:10,marginRight:10 ,marginBottom:10,marginTop:10}}/>\r\n            <Text style={{fontSize:16,color:'#dc143c',marginLeft:20}}>{text}</Text>\r\n  \r\n            <View >\r\n   <FlatList\r\n          data={orderItem}\r\n          renderItem={({item})=>(\r\n           <NotComp item={item}/>\r\n   \r\n          ) } />\r\n   </View>\r\n            </View>\r\n    </ScrollView>\r\n          );\r\n      }\r\n\r\n      const st = StyleSheet.create({  \r\n        container:{\r\n         justifyContent:'center',\r\n            marginTop:25,\r\n            padding:10\r\n            \r\n          },\r\n        purchases:{\r\n          marginTop:5,\r\n          marginBottom:150,\r\n  \r\n        },\r\n        round:{\r\n            height:26,\r\n            width:26,\r\n            borderRadius:13,\r\n            backgroundColor:'red',\r\n            margin:9\r\n\r\n        }\r\n      })"]},"metadata":{},"sourceType":"module"}