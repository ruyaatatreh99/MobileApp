{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\setting.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport style from \"../style.js\";\nimport PhotoButton from \"../components/PhotoButton\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar Setting = function (_Component) {\n  _inherits(Setting, _Component);\n\n  var _super = _createSuper(Setting);\n\n  function Setting(props) {\n    var _this;\n\n    _classCallCheck(this, Setting);\n\n    _this = _super.call(this, props);\n\n    _this.choosephoto = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: false,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri,\n                  data: result.data\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.editinfo = function _callee2() {\n      var name, email, password, phone, address, bio, image, userid;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userid').then(function (value) {\n                _this.setState({\n                  \"userid\": eval(value)\n                });\n              }));\n\n            case 3:\n              name = _this.state.name;\n              email = _this.state.email;\n              password = _this.state.password;\n              phone = _this.state.phone;\n              address = _this.state.address;\n              bio = _this.state.bio;\n              image = _this.state.image;\n              userid = _this.state.userid;\n              fetch('http://192.168.1.113/project/editinfo.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  name: name,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                  address: address,\n                  bio: bio,\n                  image: image,\n                  userid: userid\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJason) {\n                if (responseJason === 'Information edited Successfully') alert(responseJason);else {\n                  alert(responseJason);\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              alert('Failed to fetch the data from storage');\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      address: '',\n      bio: '',\n      image: null,\n      userid: 0\n    };\n    return _this;\n  }\n\n  _createClass(Setting, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image = this.state.image;\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: style.continer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, image && React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200,\n          borderRadius: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }), React.createElement(PhotoButton, {\n        onpressb: function onpressb() {\n          return _this2.choosephoto();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: style.B,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        color: \"#dc143c\",\n        title: \"save\",\n        onPress: this.editinfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"Name\"), React.createElement(TextInput, {\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"password\"), React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, \"Address\"), React.createElement(TextInput, {\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(address) {\n          return _this2.setState({\n            address: address\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, \"Phone Number\"), React.createElement(TextInput, {\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(phone) {\n          return _this2.setState({\n            phone: phone\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: style.tex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Bio\"), React.createElement(TextInput, {\n        style: style.input,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(bio) {\n          return _this2.setState({\n            bio: bio\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), React.createElement(KeyboardSpacer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }), React.createElement(KeyboardSpacer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Setting;\n}(Component);\n\nexport { Setting as default };","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/setting.js"],"names":["React","Component","useEffect","useState","ImagePicker","KeyboardSpacer","style","PhotoButton","AsyncStorage","Setting","props","choosephoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setState","image","uri","data","editinfo","getItem","then","value","eval","name","state","email","password","phone","address","bio","userid","fetch","method","header","body","JSON","stringify","response","json","responseJason","alert","catch","error","console","continer","flex","alignItems","justifyContent","marginTop","width","height","borderRadius","B","tex","input"],"mappings":"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","sourcesContent":["import React, {Component,useEffect,useState} from \"react\";\r\nimport { Text,ScrollView,View,Button,TextInput,Image,StyleSheet,ActivityIndicator} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\r\nimport style from '../style.js';\r\nimport PhotoButton from \"../components/PhotoButton\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nexport default class  Setting extends Component { \r\n\r\n constructor(props){\r\n      super(props);\r\n      this.state={\r\n        name:'',email:'',password:'',phone:'',address:'',bio:'',image:null,userid:0    \r\n      };\r\n  }\r\n\r\n  choosephoto  = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: false,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!result.cancelled) {\r\n      this.setState({image:result.uri,\r\n                     data:result.data\r\n      });\r\n    }\r\n  };\r\n\r\n    editinfo = async() => {\r\n      try {\r\n        await AsyncStorage.getItem('userid').then((value) => {\r\n          this.setState({\"userid\":eval(value)});\r\n      });\r\n\r\n      const {name}=this.state;\r\n      const {email}=this.state;\r\n      const {password}=this.state;\r\n      const {phone}=this.state;\r\n      const {address}=this.state;\r\n      const {bio}=this.state;\r\n      const {image}=this.state;\r\n      const {userid}=this.state;\r\n\r\n     fetch('http://192.168.1.113/project/editinfo.php',{\r\n          method:'post',\r\n          header:{\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({     \r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            phone:phone,\r\n            address:address,\r\n            bio:bio,\r\n            image:image,\r\n            userid:userid,\r\n           })\r\n      }) \r\n      //responce\r\n      .then((response)=> response.json())\r\n      .then((responseJason)=>{\r\n         if(responseJason === 'Information edited Successfully')alert(responseJason);\r\n        else{\r\n          alert(responseJason);\r\n        }\r\n      }).catch((error)=>{\r\n          console.error(error);\r\n      })\r\n    } catch (e) {\r\n      alert('Failed to fetch the data from storage')\r\n    }\r\n  }\r\n\r\nrender(){\r\n\r\n  const{image}=this.state;\r\n      return(\r\n        <ScrollView>\r\n          <View style={style.continer}>\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            {/*<Button title=\"choose photo\" onPress={this.choosephoto} />*/}\r\n            <View style={{marginTop:10}}>\r\n              {image && <Image source={{ uri: image }} style={{ width: 200, height: 200,borderRadius:100 }} />}\r\n              <PhotoButton onpressb={()=>this.choosephoto()}/>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={style.B}>\r\n            <Button  color='#dc143c' title='save' onPress={this.editinfo} ></Button>\r\n          </View>\r\n\r\n          <Text style={style.tex}>Name</Text>\r\n          <TextInput style={style.input}  underlineColorAndroid='transparent' onChangeText={name => this.setState({name})}></TextInput>\r\n\r\n          <Text style={style.tex}>Email</Text>\r\n          <TextInput style={style.input} underlineColorAndroid='transparent'onChangeText={email => this.setState({email})}></TextInput>\r\n\r\n          <Text style={style.tex}>password</Text>\r\n          <TextInput secureTextEntry={true} style={style.input} underlineColorAndroid='transparent' onChangeText={password => this.setState({password})}></TextInput>\r\n\r\n          <Text style={style.tex}>Address</Text>\r\n          <TextInput style={style.input} underlineColorAndroid='transparent' onChangeText={address => this.setState({address})} ></TextInput>\r\n\r\n          <Text style={style.tex}>Phone Number</Text>\r\n          <TextInput style={style.input}  underlineColorAndroid='transparent' onChangeText={phone => this.setState({phone})}></TextInput>\r\n\r\n          <Text style={style.tex}>Bio</Text>\r\n          <TextInput style={style.input} underlineColorAndroid='transparent' onChangeText={bio => this.setState({bio})} ></TextInput>\r\n          \r\n          <KeyboardSpacer/>\r\n          <KeyboardSpacer/>\r\n          \r\n        </View>\r\n      </ScrollView>\r\n\r\n      );\r\n   }\r\n }"]},"metadata":{},"sourceType":"module"}