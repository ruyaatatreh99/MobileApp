{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\setting.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar } from 'react-native-elements';\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport style from \"../style.js\";\nexport default function Setting() {\n  var choosephoto = function choosephoto() {\n    var result;\n    return _regeneratorRuntime.async(function choosephoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.continer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.a,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Avatar, {\n    size: \"xlarge\",\n    rounded: true,\n    icon: {\n      name: 'user',\n      color: 'white',\n      type: 'font-awesome'\n    },\n    overlayContainerStyle: {\n      backgroundColor: 'gray'\n    },\n    activeOpacity: 0.1,\n    onPress: function onPress() {\n      return choosephoto();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: style.B,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    color: \"#dc143c\",\n    title: \"save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Name\"), React.createElement(TextInput, {\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"password\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Address\"), React.createElement(TextInput, {\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), React.createElement(TextInput, {\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: style.tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Bio\"), React.createElement(TextInput, {\n    style: style.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(KeyboardSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), React.createElement(KeyboardSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/setting.js"],"names":["React","ImagePicker","Avatar","KeyboardSpacer","style","Setting","choosephoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","setImage","uri","continer","a","name","color","type","backgroundColor","B","tex","input"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text,ScrollView,View,Button,TextInput,TouchableOpacity,} from 'react-native';\r\n//import ImagePicker from 'react-native-image-crop-picker';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Avatar } from 'react-native-elements';\r\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\r\nimport style from '../style.js';\r\n\r\n  export default function Setting() {\r\n\r\n    const choosephoto = async () => {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n      console.log(result);\r\n      if (!result.cancelled) {\r\n        setImage(result.uri);\r\n      }\r\n    };\r\n\r\n      return(\r\n\r\n        <ScrollView>\r\n        <View style={style.continer}>\r\n        <View style={style.a}>\r\n        <Avatar \r\n          size=\"xlarge\"\r\n          rounded\r\n          icon={{name: 'user', color: 'white', type: 'font-awesome' }}\r\n          overlayContainerStyle={{backgroundColor: 'gray'}}\r\n          activeOpacity={0.1}\r\n          onPress={() => choosephoto ()} > \r\n        </Avatar>\r\n\r\n          </View>\r\n          <View style={style.B}>\r\n          <Button  color='#dc143c' title='save' >\r\n          </Button>\r\n          </View>\r\n          <Text style={style.tex}>Name</Text>\r\n          <TextInput style={style.input} ></TextInput>\r\n    \r\n          <Text style={style.tex}>Email</Text>\r\n           <TextInput style={style.input} ></TextInput>\r\n    \r\n          <Text style={style.tex}>password</Text>\r\n          <TextInput secureTextEntry={true} style={style.input}></TextInput>\r\n    \r\n          <Text style={style.tex}>Address</Text>\r\n          <TextInput style={style.input} ></TextInput>\r\n        \r\n          <Text style={style.tex}>Phone Number</Text>\r\n          <TextInput style={style.input}></TextInput>\r\n          \r\n          <Text style={style.tex}>Bio</Text>\r\n          <TextInput style={style.input} ></TextInput>\r\n          <KeyboardSpacer/>\r\n          <KeyboardSpacer/>\r\n          </View>\r\n\r\n          \r\n          </ScrollView>\r\n      );\r\n    }\r\n    \r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}