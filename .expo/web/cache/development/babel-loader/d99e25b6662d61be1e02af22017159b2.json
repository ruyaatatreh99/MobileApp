{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\Admin\\\\addtips.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport 'react-native-gesture-handler';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BottomSheet, ListItem } from 'react-native-elements';\nimport styles from \"../Global/addProductStyle\";\nimport PhotoButton from \"../components/PhotoButton\";\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport RNPickerSelect from 'react-native-picker-select';\nexport default function AddTips() {\n  var _useState = useState(' '),\n      _useState2 = _slicedToArray(_useState, 2),\n      tiptext = _useState2[0],\n      Settiptext = _useState2[1];\n\n  var addtip = function addtip() {\n    return _regeneratorRuntime.async(function addtip$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch('http://192.168.1.113/project/Addtip.php', {\n              method: 'post',\n              header: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                text: tiptext\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseJason) {\n              if (responseJason === 'fill all information') alert(responseJason);\n              if (responseJason === 'tip added Successfully') alert(responseJason);else {\n                alert(responseJason);\n              }\n            }).catch(function (error) {\n              console.error(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {});\n  return React.createElement(View, {\n    style: {\n      width: '96%',\n      backgroundColor: 'lightgray',\n      borderRadius: 15,\n      marginTop: 15,\n      paddingLeft: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    style: styles.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, \"Add Tip\"), React.createElement(Text, {\n    style: styles.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"tip:\"), React.createElement(TextInput, {\n    style: {\n      width: '90%',\n      borderRadius: 10,\n      borderWidth: 1,\n      height: 40\n    },\n    placeholder: \"tip...\",\n    onChangeText: function onChangeText(tiptext) {\n      return Settiptext(tiptext);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"ADD\",\n    color: \"#dc143c\",\n    onPress: addtip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/Admin/addtips.js"],"names":["React","Component","useState","useEffect","BottomSheet","ListItem","styles","PhotoButton","ImagePicker","AsyncStorage","RNPickerSelect","AddTips","tiptext","Settiptext","addtip","fetch","method","header","body","JSON","stringify","text","then","response","json","responseJason","alert","catch","error","console","width","backgroundColor","borderRadius","marginTop","paddingLeft","Title","borderWidth","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAO,8BAAP;;;;;;;;;AAEA,SAASC,WAAT,EAAqBC,QAArB,QAAoC,uBAApC;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEI,eAAe,SAASC,OAAT,GAAoB;AAAA,kBAERT,QAAQ,CAAC,GAAD,CAFA;AAAA;AAAA,MAE5BU,OAF4B;AAAA,MAEpBC,UAFoB;;AAIpC,MAAMC,MAAM,GAAE,SAARA,MAAQ;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,KAAK,CAAC,yCAAD,EAA2C;AAC5CC,cAAAA,MAAM,EAAC,MADqC;AAE5CC,cAAAA,MAAM,EAAC;AACH,0BAAU,kBADP;AAEH,gCAAgB;AAFb,eAFqC;AAM5CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAClBC,gBAAAA,IAAI,EAAET;AADY,eAAf;AANsC,aAA3C,CAAL,CAWEU,IAXF,CAWO,UAACC,QAAD;AAAA,qBAAaA,QAAQ,CAACC,IAAT,EAAb;AAAA,aAXP,EAYFF,IAZE,CAYG,UAACG,aAAD,EAAiB;AACrB,kBAAGA,aAAa,KAAK,sBAArB,EAA4CC,KAAK,CAACD,aAAD,CAAL;AAC3C,kBAAGA,aAAa,KAAK,wBAArB,EAA8CC,KAAK,CAACD,aAAD,CAAL,CAA9C,KAEG;AACFC,gBAAAA,KAAK,CAACD,aAAD,CAAL;AACD;AAEA,aApBA,EAoBEE,KApBF,CAoBQ,UAACC,KAAD,EAAS;AACbC,cAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,aAtBD;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AA0BEzB,EAAAA,SAAS,CAAC,YAAM,CAEd,CAFO,CAAT;AAKD,SACJ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC2B,MAAAA,KAAK,EAAC,KAAP;AAAaC,MAAAA,eAAe,EAAC,WAA7B;AAAyCC,MAAAA,YAAY,EAAC,EAAtD;AAAyDC,MAAAA,SAAS,EAAC,EAAnE;AAAsEC,MAAAA,WAAW,EAAC;AAAlF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAKM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAAC6B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALN,EAMM,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAK,EAAC,KAAP;AAAaE,MAAAA,YAAY,EAAC,EAA1B;AAA6BI,MAAAA,WAAW,EAAC,CAAzC;AAA2CC,MAAAA,MAAM,EAAC;AAAlD,KAAlB;AAA0E,IAAA,WAAW,EAAC,QAAtF;AAA+F,IAAA,YAAY,EAAE,sBAAAzB,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,CAAd;AAAA,KAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,EAUG,oBAAC,MAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAsC,IAAA,OAAO,EAAGE,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,CADI;AAcC","sourcesContent":["import React, {Component, useState,useEffect} from \"react\";\r\nimport 'react-native-gesture-handler'\r\nimport {View,Text,StyleSheet,TextInput,Button,Image,ScrollView,TouchableOpacity} from 'react-native';\r\nimport { BottomSheet,ListItem} from 'react-native-elements'; \r\nimport styles from '../Global/addProductStyle';\r\nimport PhotoButton from \"../components/PhotoButton\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\n\r\n    export default function AddTips () {  \r\n\r\n    const [tiptext,Settiptext]=useState(' ');\r\n\r\n   const addtip= async()=>{\r\n               \r\n         fetch('http://192.168.1.113/project/Addtip.php',{\r\n             method:'post',\r\n             header:{\r\n                 'Accept': 'application/json',\r\n                 'Content-Type': 'application/json',\r\n             },\r\n             body: JSON.stringify({     \r\n                text: tiptext,\r\n              })\r\n         }) \r\n         //responce\r\n          .then((response)=> response.json())\r\n      .then((responseJason)=>{\r\n        if(responseJason === 'fill all information')alert(responseJason);\r\n         if(responseJason === 'tip added Successfully')alert(responseJason);\r\n\r\n        else{\r\n          alert(responseJason);\r\n        }\r\n         //error\r\n        }).catch((error)=>{\r\n             console.error(error);\r\n         })\r\n     }\r\n     useEffect(() => {\r\n   \r\n      });\r\n\r\n\r\n    return(\r\n<View style={{width:'96%',backgroundColor:'lightgray',borderRadius:15,marginTop:15,paddingLeft:30}}>\r\n\r\n  <Text style={styles.Title}>Add Tip</Text>\r\n\r\n\r\n      <Text style={styles.Title}>tip:</Text>\r\n      <TextInput style={{width:'90%',borderRadius:10,borderWidth:1,height:40}}  placeholder='tip...' onChangeText={tiptext => Settiptext(tiptext)}  />\r\n\r\n\r\n   \r\n   <Button  title='ADD' color='#dc143c'  onPress={ addtip}/> \r\n   </View>\r\n    );\r\n    }"]},"metadata":{},"sourceType":"module"}