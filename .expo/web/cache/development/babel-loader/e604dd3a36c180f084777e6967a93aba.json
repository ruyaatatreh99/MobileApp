{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\Admin\\\\editcat.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport 'react-native-gesture-handler';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BottomSheet, ListItem } from 'react-native-elements';\nimport styles from \"../Global/addProductStyle\";\nimport PhotoButton from \"../components/PhotoButton\";\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport RNPickerSelect from 'react-native-picker-select';\nexport default function Editcat(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(' '),\n      _useState2 = _slicedToArray(_useState, 2),\n      catname = _useState2[0],\n      Setcattname = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(' '),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      Setimage = _useState6[1];\n\n  var choosephoto = function choosephoto() {\n    var result;\n    return _regeneratorRuntime.async(function choosephoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: false,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              Setimage(result.uri, result.data);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takephoto = function takephoto() {\n    var cameraPermission, result;\n    return _regeneratorRuntime.async(function takephoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            cameraPermission = _context2.sent;\n\n            if (!(cameraPermission.status !== 'granted')) {\n              _context2.next = 7;\n              break;\n            }\n\n            alert('Sorry, we need camera permissions to make this work!');\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: false\n            }));\n\n          case 9:\n            result = _context2.sent;\n            Setimage(result.uri, result.data);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var editcat = function editcat() {\n    return _regeneratorRuntime.async(function editcat$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            fetch('http://192.168.1.107/project/editcat.php', {\n              method: 'post',\n              header: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: catname,\n                imag: image,\n                id: id\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseJason) {\n              if (responseJason === 'Information edited Successfully') alert(responseJason);else {\n                alert(responseJason);\n              }\n            }).catch(function (error) {\n              console.error(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var toggleBottomNavigationView = function toggleBottomNavigationView() {\n    setVisible(!visible);\n  };\n\n  var list = [{\n    title: 'Take Photo',\n    onPress: function onPress() {\n      return takephoto();\n    }\n  }, {\n    title: 'Choose Photo from Library',\n    onPress: function onPress() {\n      return choosephoto();\n    }\n  }, {\n    title: 'Cancel',\n    containerStyle: {\n      backgroundColor: 'lightgray'\n    },\n    titleStyle: {\n      color: 'white'\n    },\n    onPress: function onPress() {\n      return setVisible(false);\n    }\n  }];\n  return React.createElement(View, {\n    style: {\n      height: '55%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    style: styles.Titles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, \"edit Category\"), React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 250,\n      height: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }), React.createElement(PhotoButton, {\n    onpressb: toggleBottomNavigationView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), React.createElement(BottomSheet, {\n    isVisible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, list.map(function (l, i) {\n    return React.createElement(ListItem, {\n      key: i,\n      containerStyle: l.containerStyle,\n      onPress: l.onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, React.createElement(ListItem.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, React.createElement(ListItem.Title, {\n      style: l.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, l.title)));\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"new Name:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Category name\",\n    onChangeText: function onChangeText(catname) {\n      return Setcattname(catname);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  })), React.createElement(Button, {\n    title: \"edit\",\n    color: \"#dc143c\",\n    onPress: editcat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/Admin/editcat.js"],"names":["React","Component","useState","useEffect","BottomSheet","ListItem","styles","PhotoButton","ImagePicker","AsyncStorage","RNPickerSelect","Editcat","id","catname","Setcattname","visible","setVisible","image","Setimage","choosephoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","data","takephoto","requestCameraPermissionsAsync","cameraPermission","status","alert","launchCameraAsync","editcat","fetch","method","header","body","JSON","stringify","name","imag","then","response","json","responseJason","catch","error","console","toggleBottomNavigationView","list","title","onPress","containerStyle","backgroundColor","titleStyle","color","height","Titles","padding","width","map","l","i","flexDirection","Title","input"],"mappings":"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","sourcesContent":["import React, {Component, useState,useEffect} from \"react\";\r\nimport 'react-native-gesture-handler'\r\nimport {View,Text,StyleSheet,TextInput,Button,Image,ScrollView,TouchableOpacity} from 'react-native';\r\nimport { BottomSheet,ListItem} from 'react-native-elements'; \r\nimport styles from '../Global/addProductStyle';\r\nimport PhotoButton from \"../components/PhotoButton\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\n\r\n    export default function Editcat ({id}) {  \r\n\r\n    const [catname,Setcattname]=useState(' ');\r\n    const [visible, setVisible] = useState(false);\r\n    const [image,Setimage]=useState(' '); \r\n\r\n  const  choosephoto  = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n          allowsEditing: false,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n        });\r\n        if (!result.cancelled) {\r\n          Setimage(result.uri,result.data);\r\n        }\r\n      };\r\n    const  takephoto  = async () => {\r\n        const cameraPermission = await ImagePicker.requestCameraPermissionsAsync();\r\n        if (cameraPermission.status !== 'granted') {\r\n            alert('Sorry, we need camera permissions to make this work!');\r\n          }\r\n        //const getCameraPermission = await ImagePicker.getCameraPermissionsAsync();\r\n        else{\r\n        let result = await ImagePicker.launchCameraAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n          allowsEditing: false,\r\n\r\n        });\r\n        Setimage(result.uri,result.data );}\r\n\r\n      };\r\n\r\n      \r\n\r\n   const editcat= async()=>{\r\n               \r\n         fetch('http://192.168.1.107/project/editcat.php',{\r\n             method:'post',\r\n             header:{\r\n                 'Accept': 'application/json',\r\n                 'Content-Type': 'application/json',\r\n             },\r\n             body: JSON.stringify({     \r\n                name: catname,\r\n                imag:image,\r\n                id:id,\r\n              })\r\n         }) \r\n         //responce\r\n          .then((response)=> response.json())\r\n      .then((responseJason)=>{\r\n         if(responseJason === 'Information edited Successfully')alert(responseJason);\r\n\r\n        else{\r\n          alert(responseJason);\r\n        }\r\n         //error\r\n        }).catch((error)=>{\r\n             console.error(error);\r\n         })\r\n     }\r\n \r\n      const toggleBottomNavigationView = () => { setVisible(!visible); };\r\n      const list = [\r\n        { title: 'Take Photo', onPress: () => takephoto() },\r\n        { title: 'Choose Photo from Library' , onPress: () => choosephoto()},\r\n        { title: 'Cancel', containerStyle: { backgroundColor: 'lightgray' }, titleStyle: { color: 'white' },\r\n          onPress: () => setVisible(false),\r\n        },\r\n      ];\r\n\r\n    return(\r\n<View style={{height:'55%'}}>\r\n\r\n  <Text style={styles.Titles}>edit Category</Text>\r\n  <View style={{padding:10}}>\r\n\r\n        {image && <Image source={{ uri: image }} style={{ width: 250, height: 150 }} />}\r\n        <PhotoButton onpressb={toggleBottomNavigationView}/>\r\n        </View>\r\n        <BottomSheet isVisible={visible} >\r\n\r\n   {list.map((l, i) => (\r\n    <ListItem key={i} containerStyle={l.containerStyle} onPress={l.onPress}>\r\n      <ListItem.Content>\r\n        <ListItem.Title style={l.titleStyle}>{l.title}</ListItem.Title>\r\n      </ListItem.Content>\r\n    </ListItem>\r\n  ))}\r\n</BottomSheet>\r\n\r\n\r\n\r\n  <View style={{flexDirection:'row'}}>\r\n      <Text style={styles.Title}>new Name:</Text>\r\n      <TextInput style={styles.input}  placeholder='Category name' onChangeText={catname => Setcattname(catname)}  />\r\n      </View>\r\n\r\n   \r\n   <Button  title='edit' color='#dc143c'  onPress={editcat}/> \r\n   </View>\r\n    );\r\n    }"]},"metadata":{},"sourceType":"module"}