{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\search.js\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function Search() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, item.id, '.', item.title.toUpperCase());\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    value: search,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Search Here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: filteredDataSource,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ItemSeparatorComponent: ItemSeparatorView,\n    renderItem: ItemView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 45,\n    borderWidth: 1,\n    paddingLeft: 20,\n    borderRadius: 5,\n    margin: 5,\n    borderColor: '#dc143c',\n    backgroundColor: '#FFFFFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/search.js"],"names":["React","useState","useEffect","Search","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","fetch","then","response","json","responseJson","catch","error","console","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","alert","flex","container","textInputStyle","index","toString","StyleSheet","create","padding","borderWidth","paddingLeft","borderRadius","margin","borderColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {SafeAreaView,Text,StyleSheet,View,FlatList,TextInput,} from 'react-native';\r\n\r\nexport default function Search () {\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n  const [masterDataSource, setMasterDataSource] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setFilteredDataSource(responseJson);\r\n        setMasterDataSource(responseJson);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const searchFilterFunction = (text) => {\r\n    // Check if searched text is not blank\r\n    if (text) {\r\n      // Inserted text is not blank\r\n      // Filter the masterDataSource\r\n      // Update FilteredDataSource\r\n      const newData = masterDataSource.filter(\r\n        function (item) {\r\n          const itemData = item.title\r\n            ? item.title.toUpperCase()\r\n            : ''.toUpperCase();\r\n          const textData = text.toUpperCase();\r\n          return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredDataSource(newData);\r\n      setSearch(text);\r\n    } else {\r\n      // Inserted text is blank\r\n      // Update FilteredDataSource with masterDataSource\r\n      setFilteredDataSource(masterDataSource);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const ItemView = ({item}) => {\r\n    return (\r\n      // Flat List Item\r\n      <Text\r\n        style={styles.itemStyle}\r\n        onPress={() => getItem(item)}>\r\n        {item.id}\r\n        {'.'}\r\n        {item.title.toUpperCase()}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const ItemSeparatorView = () => {\r\n    return (\r\n      // Flat List Item Separator\r\n      <View\r\n        style={{\r\n          height: 0.5,\r\n          width: '100%',\r\n          backgroundColor: '#C8C8C8',\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getItem = (item) => {\r\n    // Function for click on an item\r\n    alert('Id : ' + item.id + ' Title : ' + item.title);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.textInputStyle}\r\n          onChangeText={(text) => searchFilterFunction(text)}\r\n          value={search}\r\n          underlineColorAndroid=\"transparent\"\r\n          placeholder=\"Search Here\"\r\n        />\r\n        <FlatList\r\n          data={filteredDataSource}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          ItemSeparatorComponent={ItemSeparatorView}\r\n          renderItem={ItemView}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n  },\r\n  itemStyle: {\r\n    padding: 10,\r\n  },\r\n  textInputStyle: {\r\n    height: 45,\r\n    borderWidth: 1,\r\n    paddingLeft: 20,\r\n    borderRadius:5,\r\n    margin: 5,\r\n    borderColor: '#dc143c',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}