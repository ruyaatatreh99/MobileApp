{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\charts.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport styles from \"../Global/calcstyle\";\nimport Styles from \"../style\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nexport default function Charts() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setstate = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cost = _useState4[0],\n      setcost = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userid = _useState6[0],\n      setuserid = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      profit = _useState8[0],\n      setprofit = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Reveniew = _useState10[0],\n      SetReveniew = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      p = _useState12[0],\n      setp = _useState12[1];\n\n  var readuserid = function readuserid() {\n    return _regeneratorRuntime.async(function readuserid$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userid').then(function (value) {\n              setuserid(eval(value));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var readData = function readData() {\n    fetch('http://192.168.1.113/project/getlike.php', {\n      method: 'post',\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userid: userid\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJason) {\n      setcost(responseJason.cost);\n      setprofit(responseJason.profit);\n      SetReveniew(eval(eval(profit) - eval(cost)));\n      setp(eval(eval(profit) / eval(cost) * 100));\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var readReveniew = function readReveniew() {\n    if (Reveniew < 0) setstate('Lose');\n    if (Reveniew > 0) setstate('Winner');\n    if (Reveniew == 0) setstate('Capital returned');\n  };\n\n  useEffect(function () {\n    readuserid();\n    readData();\n    readReveniew();\n  });\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.Titles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Monthly Estemates\"), React.createElement(MaterialCommunityIcons, {\n    name: \"calendar-month\",\n    size: 30,\n    color: \"#dc143c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.Forms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"expence of this month :  \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" \", cost, \"  \"))), React.createElement(View, {\n    style: styles.Forms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Profit of this month :   \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \" \", profit, \" \"))), React.createElement(View, {\n    style: styles.Forms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Total Reveniew :   \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \" \", Reveniew, \" \"))), React.createElement(View, {\n    style: styles.Forms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Status:  \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, \" \", state, \" \"))), React.createElement(View, {\n    style: styles.Forms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Percentage :  \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, \" \", p.toFixed(2), \" % \")))));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/charts.js"],"names":["React","useState","useEffect","AsyncStorage","styles","Styles","MaterialCommunityIcons","Charts","state","setstate","cost","setcost","userid","setuserid","profit","setprofit","Reveniew","SetReveniew","p","setp","readuserid","getItem","then","value","eval","readData","fetch","method","header","body","JSON","stringify","response","json","responseJason","catch","error","console","readReveniew","container","flexDirection","Titles","Forms","toFixed"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { Text, View,ScrollView} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport styles from '../Global/calcstyle';\r\nimport Styles from '../style';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'; \r\n\r\n    export default function Charts () {    \r\n      const[state,setstate]=useState('');\r\n   const[cost,setcost]=useState(0);\r\n   const[userid,setuserid]=useState(0);\r\n   const [profit,setprofit]=useState(0); \r\n   const [Reveniew,SetReveniew]=useState(0); \r\n   const [p,setp]=useState(0); \r\n   const readuserid=async()=>{\r\n    await AsyncStorage.getItem('userid').then((value) => {setuserid(eval(value)); });\r\n\r\n   } \r\n  const  readData =() => {\r\n    fetch('http://192.168.1.113/project/getlike.php',{\r\n      method:'post',\r\n      header:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({     \r\n        userid:userid,\r\n      })\r\n    }) \r\n    .then((response)=> response.json())\r\n    .then((responseJason)=>{\r\n      setcost(responseJason.cost); \r\n      setprofit(responseJason.profit); \r\n      SetReveniew(eval(eval(profit)-eval(cost)));\r\n      setp(eval(eval(profit)/eval(cost) *100));\r\n     \r\n       }).catch((error)=>{\r\n       console.error(error);\r\n      })\r\n      }\r\n      const  readReveniew  =() => {\r\n       if(Reveniew<0)setstate('Lose')\r\n       if(Reveniew>0)setstate('Winner')\r\n       if(Reveniew==0)setstate('Capital returned')\r\n       \r\n          }\r\n      useEffect(() => {\r\n        readuserid()\r\n        readData()\r\n        readReveniew()\r\n   \r\n      })\r\n\r\n  \r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n\r\n            <View style={{flexDirection:'row'}}>\r\n                <Text style={Styles.Titles}>Monthly Estemates</Text>\r\n                <MaterialCommunityIcons name=\"calendar-month\" size={30} color=\"#dc143c\" />\r\n            </View>\r\n\r\n                <View style={styles.Forms}>\r\n                    <View style={{flexDirection:'row'}}>\r\n                    <Text >expence of this month :  </Text>\r\n                    <Text> {cost}  </Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.Forms}>\r\n                    <View style={{flexDirection:'row'}}>\r\n                    <Text >Profit of this month :   </Text>\r\n                    <Text> {profit} </Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.Forms}>\r\n                    <View style={{flexDirection:'row'}}>\r\n                    <Text >Total Reveniew :   </Text>\r\n    <Text> {Reveniew} </Text>\r\n                    </View>\r\n                    \r\n                </View>\r\n            \r\n            \r\n                <View style={styles.Forms}>\r\n                    <View style={{flexDirection:'row'}}>\r\n                    <Text >Status:  </Text>\r\n    <Text> {state} </Text>\r\n                    </View>\r\n                    \r\n                </View>\r\n\r\n                <View style={styles.Forms}>\r\n                    <View style={{flexDirection:'row'}}>\r\n                    <Text >Percentage :  </Text>\r\n    <Text> {p.toFixed(2)} % </Text>\r\n                    </View>\r\n                    \r\n                </View>\r\n\r\n\r\n\r\n            </View>\r\n    </ScrollView>\r\n          );\r\n      }\r\n    "]},"metadata":{},"sourceType":"module"}