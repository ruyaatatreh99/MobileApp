{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\components\\\\homepostdemo.js\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Overlay, Rating } from 'react-native-elements';\nimport ViewProduct from \"../appScreens/ViewProduct\";\nimport { MaterialIcons } from '@expo/vector-icons';\nexport default function homePostDemo(_ref) {\n  var product = _ref.product;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    return _regeneratorRuntime.async(function toggleOverlay$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setVisible(!visible);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saverate = function saverate(rating, id) {\n    fetch('http://192.168.1.107/project/rating.php', {\n      method: 'POST',\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        rating: rating,\n        id: id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJason) {\n      if (responseJason === 'Try Again') alert(responseJason);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 180,\n      height: 'auto',\n      marginLeft: 10,\n      position: 'relative',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.around,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.Form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 47\n    }\n  }, product.name, \" \")), React.createElement(View, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 170,\n      height: 80\n    },\n    source: {\n      uri: product.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), React.createElement(Rating, {\n    style: {\n      paddingVertical: 10\n    },\n    imageSize: 30,\n    fractions: 1,\n    startingValue: eval(product.rate),\n    onFinishRating: function onFinishRating(rating) {\n      return saverate(rating, product.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    color: \"#dc143c\",\n    title: \"View\",\n    onPress: toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))))), React.createElement(Overlay, {\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(ViewProduct, {\n    ProductName: product.name,\n    Discribtion: product.bio,\n    Priceproduct: product.price,\n    image: product.image,\n    pid: product.id,\n    state: product.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  around: {\n    flexDirection: 'row'\n  },\n  Form: {\n    borderRadius: 10,\n    backgroundColor: 'white',\n    borderColor: '#dc143c',\n    borderWidth: 1,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.48,\n    shadowRadius: 5.00,\n    marginTop: 10,\n    marginBottom: 5,\n    elevation: 15,\n    width: 190,\n    height: 'auto',\n    paddingTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/components/homepostdemo.js"],"names":["React","useState","Overlay","Rating","ViewProduct","MaterialIcons","homePostDemo","product","visible","setVisible","toggleOverlay","saverate","rating","id","fetch","method","header","body","JSON","stringify","then","response","json","responseJason","alert","catch","error","console","width","height","marginLeft","position","flexDirection","styles","around","Form","alignItems","name","uri","image","paddingVertical","eval","rate","justifyContent","bio","price","state","StyleSheet","create","borderRadius","backgroundColor","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginTop","marginBottom","elevation","paddingTop"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;AAEA,SAASC,OAAT,EAAiBC,MAAjB,QAA8B,uBAA9B;AACA,OAAOC,WAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,eAAe,SAASC,YAAT,OAAkC;AAAA,MAAVC,OAAU,QAAVA,OAAU;;AAAA,kBACfN,QAAQ,CAAC,KAAD,CADO;AAAA;AAAA,MACtCO,OADsC;AAAA,MAC7BC,UAD6B;;AAE7C,MAAMC,aAAa,GAAC,SAAdA,aAAc;AAAA;AAAA;AAAA;AAAA;AAClBD,YAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAIH,MAAMG,QAAQ,GAAC,SAATA,QAAS,CAACC,MAAD,EAAQC,EAAR,EAAe;AACxBC,IAAAA,KAAK,CAAC,yCAAD,EAA2C;AAC/CC,MAAAA,MAAM,EAAC,MADwC;AAE/CC,MAAAA,MAAM,EAAC;AACH,kBAAU,kBADP;AAEH,wBAAgB;AAFb,OAFwC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA,MAAM,EAACA,MADY;AAEnBC,QAAAA,EAAE,EAACA;AAFgB,OAAf;AANyC,KAA3C,CAAL,CAWFO,IAXE,CAWG,UAACC,QAAD;AAAA,aAAaA,QAAQ,CAACC,IAAT,EAAb;AAAA,KAXH,EAYFF,IAZE,CAYG,UAACG,aAAD,EAAiB;AAClB,UAAGA,aAAa,KAAK,WAArB,EAAiCC,KAAK,CAACD,aAAD,CAAL;AACjC,KAdF,EAgBEE,KAhBF,CAgBQ,UAACC,KAAD,EAAS;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAlBF;AAmBF,GApBJ;;AAsBC,SACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC,GAAP;AAAYC,MAAAA,MAAM,EAAE,MAApB;AAA2BC,MAAAA,UAAU,EAAC,EAAtC;AAAyCC,MAAAA,QAAQ,EAAC,UAAlD;AAA8DC,MAAAA,aAAa,EAAC;AAA5E,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ7B,OAAO,CAAC8B,IAAhB,MAApC,CADF,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACP,MAAAA,UAAU,EAAC;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC,GAAP;AAAWC,MAAAA,MAAM,EAAC;AAAlB,KAAd;AAAqC,IAAA,MAAM,EAAE;AAACS,MAAAA,GAAG,EAAC/B,OAAO,CAACgC;AAAb,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAS,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAhB;AAAyC,IAAA,SAAS,EAAE,EAApD;AAAyD,IAAA,SAAS,EAAE,CAApE;AAAuE,IAAA,aAAa,EAAEC,IAAI,CAAClC,OAAO,CAACmC,IAAT,CAA1F;AAA0G,IAAA,cAAc,EAAE,wBAAA9B,MAAM;AAAA,aAAID,QAAQ,CAACC,MAAD,EAAQL,OAAO,CAACM,EAAhB,CAAZ;AAAA,KAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACmB,MAAAA,aAAa,EAAC,KAAf;AAAqBW,MAAAA,cAAc,EAAC;AAApC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAqC,IAAA,OAAO,EAAEjC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPN,CADF,CADD,CADF,EAmBG,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEF,OAApB;AAA6B,IAAA,eAAe,EAAEE,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAc,IAAA,WAAW,EAAEH,OAAO,CAAC8B,IAAnC;AAAyC,IAAA,WAAW,EAAE9B,OAAO,CAACqC,GAA9D;AAAmE,IAAA,YAAY,EAAErC,OAAO,CAACsC,KAAzF;AAAgG,IAAA,KAAK,EAAEtC,OAAO,CAACgC,KAA/G;AAAsH,IAAA,GAAG,EAAEhC,OAAO,CAACM,EAAnI;AAAuI,IAAA,KAAK,EAAEN,OAAO,CAACuC,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBH,CADD;AAyBD;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAEjCd,EAAAA,MAAM,EAAC;AACHF,IAAAA,aAAa,EAAC;AADX,GAF0B;AAM/BG,EAAAA,IAAI,EAAC;AACHc,IAAAA,YAAY,EAAC,EADV;AAEHC,IAAAA,eAAe,EAAC,OAFb;AAGHC,IAAAA,WAAW,EAAC,SAHT;AAIHC,IAAAA,WAAW,EAAC,CAJT;AAKHC,IAAAA,WAAW,EAAE,MALV;AAMHC,IAAAA,YAAY,EAAE;AAAE1B,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KANX;AAOH0B,IAAAA,aAAa,EAAE,IAPZ;AAQHC,IAAAA,YAAY,EAAE,IARX;AASHC,IAAAA,SAAS,EAAC,EATP;AAUHC,IAAAA,YAAY,EAAC,CAVV;AAWHC,IAAAA,SAAS,EAAE,EAXR;AAYH/B,IAAAA,KAAK,EAAC,GAZH;AAaHC,IAAAA,MAAM,EAAE,MAbL;AAcH+B,IAAAA,UAAU,EAAC;AAdR;AAN0B,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler'\r\nimport React,{useState} from 'react';\r\nimport { StyleSheet, Text, View ,ScrollView,Button,Image} from 'react-native';\r\nimport { Overlay,Rating} from 'react-native-elements';\r\nimport ViewProduct from '../appScreens/ViewProduct';\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\n\r\nexport default function homePostDemo ({product}) {  \r\n    const [visible, setVisible] = useState(false);\r\n    const toggleOverlay=async () =>{\r\n      setVisible(!visible);\r\n    }\r\n\r\n const saverate=(rating,id) => {\r\n       fetch('http://192.168.1.107/project/rating.php',{\r\n        method:'POST',\r\n        header:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({     \r\n          rating:rating,\r\n          id:id,\r\n         })\r\n    }) \r\n    .then((response)=> response.json())\r\n    .then((responseJason)=>{\r\n         if(responseJason === 'Try Again')alert(responseJason);\r\n        })\r\n        //error\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        })\r\n    }\r\n\r\n  return(\r\n   <ScrollView >\r\n     <View  style={{width:180, height: 'auto',marginLeft:10,position:'relative' ,flexDirection:'row'}}>\r\n      <View style={styles.around}>\r\n        <View style={styles.Form}>\r\n          <View style={{alignItems:'center'}}><Text >{product.name} </Text></View>\r\n            <View style={{marginLeft:10}}>\r\n              <Image style={{width:170,height:80}} source={{uri:product.image}}></Image>\r\n              <Rating  style={{ paddingVertical: 10 }} imageSize={30}  fractions={1} startingValue={eval(product.rate)} onFinishRating={rating => saverate(rating,product.id)}/>\r\n              </View>\r\n\r\n              <View style={{flexDirection:'row',justifyContent:'space-around'}}>\r\n                <Button color='#dc143c' title='View' onPress={toggleOverlay} />\r\n              </View>\r\n\r\n             </View>\r\n           </View>\r\n         </View>\r\n\r\n         \r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\r\n        <ViewProduct  ProductName={product.name} Discribtion={product.bio} Priceproduct={product.price} image={product.image} pid={product.id} state={product.state} />\r\n  </Overlay>\r\n  </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\naround:{\r\n    flexDirection:'row',\r\n  },\r\n\r\n  Form:{\r\n    borderRadius:10,\r\n    backgroundColor:'white',\r\n    borderColor:'#dc143c',\r\n    borderWidth:1,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\twidth: 0,\theight: 0,},\r\n    shadowOpacity: 0.48,\r\n    shadowRadius: 5.00,\r\n    marginTop:10,\r\n    marginBottom:5,\r\n    elevation: 15,\r\n    width:190,\r\n    height: 'auto',\r\n    paddingTop:10,\r\n  },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}