{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\HomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport HomeComp from \"../components/HomeComp\";\nimport Loader from \"../components/Loader\";\nimport { Constants, Notifications, NOTIFICATIONS } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport Sth from \"./sth\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      Loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      msg = _useState4[0],\n      setmsg = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      l = _useState6[0],\n      setl = _useState6[1];\n\n  var localNotification = {\n    title: 'done',\n    body: 'done!'\n  };\n\n  var notification = function notification() {\n    var schedulingOptions = {\n      time: new Date().getTime()\n    };\n    Notifications.scheduleLocalNotificationAsync(localNotification, schedulingOptions);\n  };\n\n  var handleNotification = function handleNotification() {\n    console.warn('ok! got your notif');\n  };\n\n  var askNotification = function askNotification() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function askNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            if (Constants.isDevice && status === 'granted') console.log('Notification permissions granted.');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var readtips = function readtips() {\n    var _await$Permissions$ge, status, RandomNumber;\n\n    return _regeneratorRuntime.async(function readtips$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 2:\n            _await$Permissions$ge = _context2.sent;\n            status = _await$Permissions$ge.status;\n\n            if (status !== 'granted') {\n              alert('Hey! You might want to enable notifications.');\n            } else {\n              console.log('RandomNumber:');\n              RandomNumber = Math.floor(Math.random() * 21) + 1;\n              console.log(RandomNumber);\n              fetch('http://192.168.1.107/project/getmsg.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  userid: userid\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJason) {\n                if (responseJason === 'No message Yet') settext(responseJason);else {\n                  setmsg(responseJason.results);\n                  setl(msg.length);\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readtips();\n    notification();\n    askNotification();\n    var listener = Notifications.addListener(handleNotification);\n    return function () {\n      return listener.remove();\n    };\n  }, []);\n  setTimeout(function () {\n    setLoading({\n      Loading: false\n    });\n  }, 2500);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, React.createElement(Loader, {\n    loading: Loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 'auto',\n      height: 'auto',\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeComp, {\n    pic: require(\"../images/f2.png\"),\n    title: 'Food',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/s1.jpg\"),\n    title: 'Sweet',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/a4.jpg\"),\n    title: 'Art',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/c1.jpg\"),\n    title: 'Craft',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/ac1.jpg\"),\n    title: 'Jewelery',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/p1.jpg\"),\n    title: 'paintings',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/fu2.jpg\"),\n    title: 'Furniture',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/clo.jpg\"),\n    title: 'clothes and knitting',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/others.png\"),\n    title: 'others',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }), React.createElement(KeyboardSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/HomeScreen.js"],"names":["React","useState","useEffect","KeyboardSpacer","HomeComp","Loader","Constants","Notifications","NOTIFICATIONS","Permissions","Sth","Home","navigation","Loading","setLoading","msg","setmsg","l","setl","localNotification","title","body","notification","schedulingOptions","time","Date","getTime","scheduleLocalNotificationAsync","handleNotification","console","warn","askNotification","askAsync","status","isDevice","log","readtips","getAsync","alert","RandomNumber","Math","floor","random","fetch","method","header","JSON","stringify","userid","then","response","json","responseJason","settext","results","length","catch","error","listener","addListener","remove","setTimeout","width","height","alignItems","marginTop","require"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { ScrollView,View,Button,StyleSheet,Text,AppRegistry,ActivityIndicator} from 'react-native';\r\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\r\nimport HomeComp from '../components/HomeComp';\r\nimport Loader from '../components/Loader';\r\nimport {Constants, Notifications,NOTIFICATIONS} from 'expo';\r\nimport * as Permissions from 'expo-permissions';\r\n//import AsyncStorage from '@react-native-community/async-storage';\r\nimport Sth from './sth';\r\n\r\nexport default function Home ({navigation}) {  \r\n\r\n const [Loading, setLoading] = useState(true);\r\n const [msg,setmsg]=useState([]);\r\n const [l,setl]=useState(0);\r\n const localNotification = { title: 'done', body: 'done!' };\r\n const notification =() =>{\r\n  \r\nconst schedulingOptions = {\r\n    time: (new Date()).getTime() \r\n}\r\nNotifications.scheduleLocalNotificationAsync(\r\n    localNotification, schedulingOptions\r\n);\r\n }\r\n const handleNotification = () => {\r\n  console.warn('ok! got your notif');\r\n};\r\nconst askNotification = async () => {\r\n  // We need to ask for Notification permissions for ios devices\r\n  const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n  if (Constants.isDevice && status === 'granted')\r\n    console.log('Notification permissions granted.');\r\n};\r\n\r\n\r\nconst readtips =  async() => {\r\n  //const [permission, askForPermission] = usePermissions(Permissions.CAMERA, { ask: true });\r\n  const { status } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\r\n  if (status !== 'granted') {\r\n    alert('Hey! You might want to enable notifications.');\r\n  }\r\n  else{ \r\n    console.log('RandomNumber:');\r\n  var RandomNumber = Math.floor(Math.random() * 21) + 1 ;\r\n  \r\n  console.log(RandomNumber);\r\n   fetch('http://192.168.1.107/project/getmsg.php',{\r\n      method:'post',\r\n      header:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({     \r\n        userid:userid,\r\n      })\r\n    }) \r\n    .then((response)=> response.json())\r\n    .then((responseJason)=>{\r\n      if(responseJason === 'No message Yet')settext(responseJason);\r\n      else {setmsg(responseJason.results);setl(msg.length); }\r\n       }).catch((error)=>{\r\n       console.error(error);\r\n      })\r\n  }}\r\n\r\n  useEffect(() => {\r\n    readtips(); \r\n    notification();\r\n    askNotification();\r\n    const listener = Notifications.addListener(handleNotification);\r\n    return () => listener.remove();\r\n  }, [])\r\n\r\n setTimeout(() => {\r\n  setLoading({\r\n    Loading: false,\r\n  });\r\n}, 2500);\r\n  \r\n  return(\r\n  \r\n    \r\n   <ScrollView >\r\n     {/*<View><Sth tip={tip}/></View>*/}\r\n           <Loader loading={Loading} />\r\n    <View  style={{width: 'auto', height: 'auto',alignItems:'center',marginTop:20,}}>\r\n     <HomeComp pic={require('../images/f2.png')} title={'Food'}       navigation={navigation}/>\r\n     <HomeComp pic={require('../images/s1.jpg')} title={'Sweet'}      navigation={navigation}/>\r\n     <HomeComp pic={require('../images/a4.jpg')} title={'Art'}        navigation={navigation}/>\r\n     <HomeComp pic={require('../images/c1.jpg')} title={'Craft'}      navigation={navigation}/>\r\n     <HomeComp pic={require('../images/ac1.jpg')} title={'Jewelery'}   navigation={navigation}/>\r\n     <HomeComp pic={require('../images/p1.jpg')} title={'paintings'}  navigation={navigation}/>\r\n     <HomeComp pic={require('../images/fu2.jpg')} title={'Furniture'} navigation={navigation}/>\r\n     <HomeComp pic={require('../images/clo.jpg')} title={'clothes and knitting'} navigation={navigation}/>\r\n     <HomeComp pic={require('../images/others.png')} title={'others'}     navigation={navigation}/>\r\n   \r\n   <KeyboardSpacer/>\r\n   \r\n   </View>\r\n\r\n  </ScrollView>\r\n    );\r\n\r\n}\r\n//AppRegistry.registerComponent('Appname', () => Home);"]},"metadata":{},"sourceType":"module"}