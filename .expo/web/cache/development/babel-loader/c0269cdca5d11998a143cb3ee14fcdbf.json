{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\AboutUs.js\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Foundation } from '@expo/vector-icons';\nimport StepIndicator from 'react-native-step-indicator';\nvar customStyles = {\n  stepIndicatorSize: 25,\n  currentStepIndicatorSize: 30,\n  separatorStrokeWidth: 2,\n  currentStepStrokeWidth: 3,\n  stepStrokeCurrentColor: '#dd4e4e',\n  stepStrokeWidth: 3,\n  stepStrokeFinishedColor: '#dd4e4e',\n  stepStrokeUnFinishedColor: '#aaaaaa',\n  separatorFinishedColor: '#dd4e4e',\n  separatorUnFinishedColor: '#aaaaaa',\n  stepIndicatorFinishedColor: '#dd4e4e',\n  stepIndicatorUnFinishedColor: '#ffffff',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 13,\n  currentStepIndicatorLabelFontSize: 13,\n  stepIndicatorLabelCurrentColor: '#dd4e4e',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: '#aaaaaa',\n  labelColor: '#999999',\n  labelSize: 13,\n  currentStepLabelColor: '#dd4e4e'\n};\nvar labels = [\"Guide\", \"Budget\", \"Marketing\"];\nexport default function AboutUs() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPosition = _useState2[0],\n      setCurrentPosition = _useState2[1];\n\n  var nextstep = function nextstep() {\n    setCurrentPosition(currentPosition + 1);\n  };\n\n  var backstep = function backstep() {\n    setCurrentPosition(currentPosition - 1);\n  };\n\n  var Data = [{\n    label: ' To Guide',\n    status: 'guide pepole to how to successfully build their business and help them sell their products and reach their target customers.'\n  }, {\n    label: 'Budget',\n    status: 'helps people to easy basic sets of tasks as- budget handling, financial Analysis'\n  }, {\n    label: 'Marketing',\n    status: 'pepole can start posting to their profile to start selling'\n  }];\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(StepIndicator, {\n    customStyles: customStyles,\n    currentPosition: currentPosition,\n    labels: labels,\n    direction: \"vertical\",\n    stepCount: \"3\",\n    renderLabel: function renderLabel(_ref) {\n      var position = _ref.position,\n          stepStatus = _ref.stepStatus,\n          label = _ref.label,\n          crntPosition = _ref.crntPosition;\n      return React.createElement(View, {\n        style: style.lblcont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, React.createElement(Text, {\n        style: style.lbltxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      }, Data[position].label), React.createElement(Text, {\n        style: [style.status, {\n          marginTop: 5\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, Data[position].status));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 30\n    },\n    onPress: function onPress() {\n      return backstep();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, React.createElement(Foundation, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"#dd4e4e\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return nextstep();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, React.createElement(Foundation, {\n    name: \"arrow-right\",\n    size: 30,\n    color: \"#dd4e4e\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }))));\n}\nvar style = StyleSheet.create({\n  status: {\n    fontSize: 15\n  },\n  lbltxt: {\n    fontSize: 17,\n    color: '#000',\n    fontWeight: 'bold'\n  },\n  lblcont: {\n    padding: 10,\n    paddingTop: 40,\n    paddingLeft: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/AboutUs.js"],"names":["React","useState","Foundation","StepIndicator","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","labels","AboutUs","currentPosition","setCurrentPosition","nextstep","backstep","Data","label","status","flex","padding","position","stepStatus","crntPosition","style","lblcont","lbltxt","marginTop","flexDirection","marginRight","StyleSheet","create","fontSize","color","fontWeight","paddingTop","paddingLeft"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\r\nimport React,{useState} from 'react';\r\nimport { StyleSheet,StatusBar,View,Text,TouchableOpacity,ActivityIndicator} from 'react-native';\r\nimport { Foundation } from '@expo/vector-icons'; \r\nimport StepIndicator from 'react-native-step-indicator';\r\nconst customStyles = {\r\n    stepIndicatorSize: 25,\r\n    currentStepIndicatorSize:30,\r\n    separatorStrokeWidth: 2,\r\n    currentStepStrokeWidth: 3,\r\n    stepStrokeCurrentColor: '#dd4e4e',\r\n    stepStrokeWidth: 3,\r\n    stepStrokeFinishedColor: '#dd4e4e',\r\n    stepStrokeUnFinishedColor: '#aaaaaa',\r\n    separatorFinishedColor: '#dd4e4e',\r\n    separatorUnFinishedColor: '#aaaaaa',\r\n    stepIndicatorFinishedColor: '#dd4e4e',\r\n    stepIndicatorUnFinishedColor: '#ffffff',\r\n    stepIndicatorCurrentColor: '#ffffff',\r\n    stepIndicatorLabelFontSize: 13,\r\n    currentStepIndicatorLabelFontSize: 13,\r\n    stepIndicatorLabelCurrentColor: '#dd4e4e',\r\n    stepIndicatorLabelFinishedColor: '#ffffff',\r\n    stepIndicatorLabelUnFinishedColor: '#aaaaaa',\r\n    labelColor: '#999999',\r\n    labelSize: 13,\r\n    currentStepLabelColor: '#dd4e4e'\r\n  }\r\n  const labels=[\"Guide\",\"Budget\",\"Marketing\"];\r\n\r\nexport default function AboutUs (){ \r\n    const [currentPosition,setCurrentPosition]=useState(0);\r\n    const nextstep =() =>{\r\n        setCurrentPosition(currentPosition+1);\r\n    }\r\n    const backstep= ()=>{\r\n        setCurrentPosition(currentPosition-1);\r\n    }\r\n    const Data = [\r\n        {label:' To Guide', status:'guide pepole to how to successfully build their business and help them sell their products and reach their target customers.'},\r\n        {label:'Budget',status:'helps people to easy basic sets of tasks as- budget handling, financial Analysis'},\r\n        {label:'Marketing',status:'pepole can start posting to their profile to start selling'}\r\n];\r\n    return (\r\n        <View style={{flex:1,padding:15}}>\r\n           <StepIndicator\r\n           customStyles={customStyles}\r\n           currentPosition={currentPosition}\r\n           labels={labels}\r\n           direction='vertical'\r\n           stepCount='3'\r\n           renderLabel={({position,stepStatus,label,crntPosition})=>{\r\n               return(\r\n                   <View style={style.lblcont}>\r\n                   <Text style={style.lbltxt}>{Data[position].label}</Text>\r\n                  <Text style={[style.status,{marginTop:5}]}>{Data[position].status}</Text>\r\n                  </View>\r\n               )\r\n           }}\r\n           />\r\n           <View style={{flexDirection:'row'}}>\r\n           <TouchableOpacity style={{marginRight:30}} onPress={() =>backstep()}>\r\n           <Foundation name=\"arrow-left\" size={30} color=\"#dd4e4e\"/>\r\n           </TouchableOpacity>\r\n           <TouchableOpacity  onPress={() =>nextstep()}>\r\n           <Foundation name=\"arrow-right\" size={30} color=\"#dd4e4e\"/>\r\n           </TouchableOpacity>\r\n           </View>\r\n        </View>\r\n      ); \r\n}\r\nconst style=StyleSheet.create({\r\n   status:{\r\n       fontSize:15,\r\n   },\r\n   lbltxt:{\r\n       fontSize:17,\r\n       color:'#000',\r\n       fontWeight:'bold'\r\n   },\r\n   lblcont:{\r\n       padding:10,\r\n       paddingTop:40,\r\n       paddingLeft:5,\r\n   },\r\n    });"]},"metadata":{},"sourceType":"module"}