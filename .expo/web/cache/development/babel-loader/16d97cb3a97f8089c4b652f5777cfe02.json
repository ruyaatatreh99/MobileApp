{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ru'ya\\\\myproject1\\\\appScreens\\\\HomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport HomeComp from \"../components/HomeComp\";\nimport Loader from \"../components/Loader\";\nimport { Constants, Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      Loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      msg = _useState4[0],\n      setmsg = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      l = _useState6[0],\n      setl = _useState6[1];\n\n  var localNotification = {\n    title: 'Message',\n    body: 'check for new message!',\n    sound: 'email-sound.wav'\n  };\n\n  var notification = function notification() {\n    var schedulingOptions = {\n      time: new Date().getTime()\n    };\n    Notifications.scheduleLocalNotificationAsync(localNotification, schedulingOptions);\n  };\n\n  var handleNotification = function handleNotification() {\n    console.warn('ok! got your notif');\n  };\n\n  var _getNotificationPermissions = function _getNotificationPermissions() {\n    return new Promise(function _callee(resolve, reject) {\n      var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status, token;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n            case 2:\n              _await$Permissions$ge = _context.sent;\n              existingStatus = _await$Permissions$ge.status;\n              finalStatus = existingStatus;\n\n              if (!(existingStatus !== 'granted')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 8:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              finalStatus = status;\n\n            case 11:\n              if (!('granted' === finalStatus)) {\n                _context.next = 19;\n                break;\n              }\n\n              if ('android' === Platform.OS) {\n                Expo.Notifications.createChannelAndroidAsync('test-members', {\n                  name: 'Mail Service',\n                  sound: true\n                });\n              }\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 15:\n              token = _context.sent;\n              token.then(resolve(token)).catch(function () {\n                return reject('Notifications allowed but there occurs an error at receiving the expo Token.');\n              });\n              _context.next = 20;\n              break;\n\n            case 19:\n              reject('Notifications not allowed. Status: ' + finalStatus);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  var readtips = function readtips() {\n    var _await$Permissions$ge2, status, RandomNumber;\n\n    return _regeneratorRuntime.async(function readtips$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 2:\n            _await$Permissions$ge2 = _context2.sent;\n            status = _await$Permissions$ge2.status;\n\n            if (status !== 'granted') {\n              alert('Hey! You might want to enable notifications.');\n            } else {\n              console.log('RandomNumber:');\n              RandomNumber = Math.floor(Math.random() * 21) + 1;\n              console.log(RandomNumber);\n              fetch('http://192.168.1.107/project/getmsg.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  userid: userid\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJason) {\n                if (responseJason === 'No message Yet') settext(responseJason);else {\n                  setmsg(responseJason.results);\n                  setl(msg.length);\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readtips();\n\n    if (l >= 1) {\n      _getNotificationPermissions();\n\n      notification();\n      var listener = Notifications.addListener(handleNotification);\n      return function () {\n        return listener.remove();\n      };\n    }\n  }, []);\n  setTimeout(function () {\n    setLoading({\n      Loading: false\n    });\n  }, 2500);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }, React.createElement(Loader, {\n    loading: Loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 'auto',\n      height: 'auto',\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeComp, {\n    pic: require(\"../images/f2.png\"),\n    title: 'Food',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/s1.jpg\"),\n    title: 'Sweet',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/a4.jpg\"),\n    title: 'Art',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/c1.jpg\"),\n    title: 'Craft',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/ac1.jpg\"),\n    title: 'Jewelery',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/p1.jpg\"),\n    title: 'paintings',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/fu2.jpg\"),\n    title: 'Furniture',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/clo.jpg\"),\n    title: 'clothes and knitting',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }), React.createElement(HomeComp, {\n    pic: require(\"../images/others.png\"),\n    title: 'others',\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }), React.createElement(KeyboardSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Ru'ya/myproject1/appScreens/HomeScreen.js"],"names":["React","useState","useEffect","KeyboardSpacer","HomeComp","Loader","Constants","Notifications","Permissions","Home","navigation","Loading","setLoading","msg","setmsg","l","setl","localNotification","title","body","sound","notification","schedulingOptions","time","Date","getTime","scheduleLocalNotificationAsync","handleNotification","console","warn","_getNotificationPermissions","Promise","resolve","reject","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","Platform","OS","Expo","createChannelAndroidAsync","name","getExpoPushTokenAsync","token","then","catch","readtips","alert","log","RandomNumber","Math","floor","random","fetch","method","header","JSON","stringify","userid","response","json","responseJason","settext","results","length","error","listener","addListener","remove","setTimeout","width","height","alignItems","marginTop","require"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { ScrollView,View,Button,StyleSheet,Text,AppRegistry,ActivityIndicator} from 'react-native';\r\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\r\nimport HomeComp from '../components/HomeComp';\r\nimport Loader from '../components/Loader';\r\nimport {Constants, Notifications} from 'expo';\r\nimport * as Permissions from 'expo-permissions';\r\n//import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n\r\n\r\nexport default function Home ({navigation}) {  \r\n \r\n const [Loading, setLoading] = useState(true);\r\n const [msg,setmsg]=useState([]);\r\n const [l,setl]=useState(0);\r\n const localNotification = { title: 'Message', body: 'check for new message!', sound: 'email-sound.wav'};\r\n const notification =() =>{\r\n  \r\nconst schedulingOptions = {\r\n    time: (new Date()).getTime() \r\n}\r\nNotifications.scheduleLocalNotificationAsync(\r\n    localNotification, schedulingOptions\r\n);\r\n }\r\n const handleNotification = () => {\r\n  console.warn('ok! got your notif');\r\n  \r\n};\r\n\r\nconst _getNotificationPermissions = () => (\r\n  new Promise(async (resolve, reject) => {\r\n          const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS)\r\n          let finalStatus = existingStatus\r\n\r\n          if (existingStatus !== 'granted') {\r\n\r\n              const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS)\r\n              finalStatus = status\r\n          }\r\n\r\n          if ('granted' === finalStatus) {\r\n\r\n              if ('android' === Platform.OS) {\r\n                  Expo.Notifications.createChannelAndroidAsync('test-members', {\r\n                      name: 'Mail Service',\r\n                      sound: true,\r\n                  })\r\n              }\r\n\r\n              const token = await Notifications.getExpoPushTokenAsync()\r\n              token.then(resolve(token))\r\n                  .catch(() => reject('Notifications allowed but there occurs an error at receiving the expo Token.'))\r\n          } else {\r\n              reject('Notifications not allowed. Status: ' + finalStatus)\r\n          }\r\n      }))\r\n\r\nconst readtips =  async() => {\r\n  //const [permission, askForPermission] = usePermissions(Permissions.CAMERA, { ask: true });\r\n  const { status } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\r\n  if (status !== 'granted') {\r\n    alert('Hey! You might want to enable notifications.');\r\n  }\r\n  else{ \r\n    console.log('RandomNumber:');\r\n  var RandomNumber = Math.floor(Math.random() * 21) + 1 ;\r\n  \r\n  console.log(RandomNumber);\r\n   fetch('http://192.168.1.107/project/getmsg.php',{\r\n      method:'post',\r\n      header:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({     \r\n        userid:userid,\r\n      })\r\n    }) \r\n    .then((response)=> response.json())\r\n    .then((responseJason)=>{\r\n      if(responseJason === 'No message Yet')settext(responseJason);\r\n      else {setmsg(responseJason.results);setl(msg.length); }\r\n       }).catch((error)=>{\r\n       console.error(error);\r\n      })\r\n  }}\r\n\r\n  useEffect(() => {\r\n    readtips(); \r\n    if(l>=1){\r\n      _getNotificationPermissions ();\r\n    notification();\r\n    const listener = Notifications.addListener(handleNotification);\r\n    return () => listener.remove();\r\n    }\r\n  }, [])\r\n\r\n setTimeout(() => {\r\n  setLoading({\r\n    Loading: false,\r\n  });\r\n}, 2500);\r\n  \r\n  return(\r\n  \r\n    \r\n   <ScrollView >\r\n     {/*<View><Sth tip={tip}/></View>*/}\r\n           <Loader loading={Loading} />\r\n    <View  style={{width: 'auto', height: 'auto',alignItems:'center',marginTop:20,}}>\r\n     <HomeComp pic={require('../images/f2.png')} title={'Food'}       navigation={navigation}/>\r\n     <HomeComp pic={require('../images/s1.jpg')} title={'Sweet'}      navigation={navigation}/>\r\n     <HomeComp pic={require('../images/a4.jpg')} title={'Art'}        navigation={navigation}/>\r\n     <HomeComp pic={require('../images/c1.jpg')} title={'Craft'}      navigation={navigation}/>\r\n     <HomeComp pic={require('../images/ac1.jpg')} title={'Jewelery'}   navigation={navigation}/>\r\n     <HomeComp pic={require('../images/p1.jpg')} title={'paintings'}  navigation={navigation}/>\r\n     <HomeComp pic={require('../images/fu2.jpg')} title={'Furniture'} navigation={navigation}/>\r\n     <HomeComp pic={require('../images/clo.jpg')} title={'clothes and knitting'} navigation={navigation}/>\r\n     <HomeComp pic={require('../images/others.png')} title={'others'}     navigation={navigation}/>\r\n   \r\n   <KeyboardSpacer/>\r\n   \r\n   </View>\r\n\r\n  </ScrollView>\r\n    );\r\n\r\n}\r\n//AppRegistry.registerComponent('Appname', () => Home);"]},"metadata":{},"sourceType":"module"}